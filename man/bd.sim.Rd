% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bd.sim.R
\name{bd.sim}
\alias{bd.sim}
\title{General rate Birth-Death simulation}
\usage{
bd.sim(
  n0,
  pp,
  qq,
  tMax,
  pShape = NULL,
  qShape = NULL,
  envPP = NULL,
  envQQ = NULL,
  pShifts = NULL,
  qShifts = NULL,
  nFinal = c(0, Inf),
  extOnly = FALSE,
  fast = TRUE,
  trueExt = FALSE
)
}
\arguments{
\item{n0}{Initial number of species, usually 1. Good parameter
to tweak if one is observing a low sample size when testing.}

\item{pp}{Function to hold the speciation rate over time. It could be a
constant or a function of time (to be an exponential rate or weibull scale),
a function of time and an environmental variable, or a vector of rates to be
accompanied by a vector of rate shifts \code{pShifts}.}

\item{qq}{similar to above, but for the extinction rate.

Note: \code{pp} and \code{qq} must always be greater than 0}

\item{tMax}{Ending time of simulation. Any species still living after
\code{tMax} is considered extant, and any species that would be generated
after \code{tMax} is not born.}

\item{pShape}{Shape parameter for the Weibull distribution for age-dependent
speciation. Default is \code{NULL}, where \code{pp} will be considered a
(possibly) time-dependent exponential rate. For \code{pShape != NULL}, 
\code{pp} will be considered a scale, and \code{rexp.var} will draw a Weibull 
distribution instead. Note \code{pp} may still be time-dependent.}

\item{qShape}{similar to above, but for the extinction rate.

Note: when shape is not \code{NULL}, rate will be interpreted as a Weibull
scale, so that instead of events taking on average \code{1/rate} million 
years they would take \code{rate} million years (for \code{shape = 1}).

Note: Time-varying shape is implemented, so one could have \code{pShape} or
\code{qShape} be a function of time. It is not thoroughly tested, however, so 
it may be prudent to wait for a future release where this feature is well 
established.}

\item{envPP}{A matrix representing an environmental variable (time, CO2, etc)
with time. The first column must be time, second column the values of the 
variable. This will be used to create a speciation rate using \code{make.rate},
so \code{pp} must be a function of time and another variable.}

\item{envQQ}{similar to above, but for the extinction rate.}

\item{pShifts}{Vector of rate shifts. First element must be the starting
time for the simulation (\code{0} or \code{tMax}). It must have the same length 
as \code{pp}. \code{c(0, x, tMax)} is equivalent to \code{c(tMax, tMax - x, 0)}
for the purposes of \code{make.rate}.}

\item{qShifts}{similar to above, but for the extinction rate.

Note that using this  method for step-function rates is currently slower than using
\code{ifelse}.}

\item{nFinal}{An interval of acceptable number of species at the end of the
simulation. If not supplied, default is \code{c(0, Inf)}, so that any number
of species is accepted. If supplied, \code{bd.sim.constant} or 
\code{bd.sim.general} will run until the number of total species generated, or, 
if \code{extOnly = TRUE}, the number of extant species at the end of the 
simulation, lies within the interval.}

\item{extOnly}{A boolean indicating whether \code{nFinal} should be taken as
the number of total or extant species during the simulation. If \code{TRUE},
\code{bd.sim.constant} or \code{bd.sim.general} will run until the number of extant
species lies within the \code{nFinal} interval. If \code{FALSE}, as default, it 
will run until the total number of species generated lies within that interval.}

\item{fast}{Used for \code{bd.sim.general}. When \code{TRUE}, sets 
\code{rexp.var} to throw away waiting times higher than the maximum 
simulation time. Should be \code{FALSE} for unbiased testing of age 
dependency. User might also se it to \code{FALSE} for more accurate waiting
times.}

\item{trueExt}{Used for \code{bd.sim.general}. When \code{TRUE}, time of 
extinction of extant species will be the true time, otherwise it will be 
\code{tMax+0.01}. Need to be \code{TRUE} when testing age-dependent 
extinction.}
}
\value{
The return list of either \code{bd.sim.constant} or
\code{bd.sim.general}, which have the same elements, as follows

\describe{
\item{\code{TE}}{List of extinction times, with \code{-0.01} as the time of
extinction for extant species.}

\item{\code{TS}}{List of speciation times, with \code{tMax+0.01} as the time of
speciation for species that started the simulation.}

\item{\code{PAR}}{List of parents. Species that started the simulation have
\code{NA}, while species that were generated during the simulation have their
parent's number. Species are numbered as they are born.}

\item{\code{EXTANT}}{List of booleans representing whether each species is
extant.}}
}
\description{
Simulates a species birth-death process with general rates for any number of
starting species. Allows for the speciation/extinction rate to be constant,
a function of time, a function of time and an environmental variable, or a 
vector of numbers. Takes an optional shape argument for speciation and/or 
extinction, under which the corresponding rate will be taken to be a Weibull 
scale for age-dependent dynamics. Also may take a list of rate shifts, if the
corresponding rate is a vector of numbers, or a dataframe with environmental 
data. Returns an object containing vectors of speciation times, extinction 
times, parents and status (extant or not). Can return true extinction times or 
simply information on whether species lived after maximum simulation time. 
Allows for constraining on the number of species at the end of the simulation, 
either total or extant.
Note that while time runs from \code{0} to \code{tmax} on the function itself,
it runs from \code{tmax} to \code{0} on the vectors returned to conform with 
the literature.
}
\examples{

# we will showcase here some of the possible scenarios for diversification,
# touching on all the kinds of rates

###
# consider first the simplest regimen, constant speciation and extinction

# initial number of species
n0 <- 1

# maximum simulation time
tMax <- 40

# speciation
p <- 0.11

# extinction
q <- 0.08

# run the simulation, making sure we have more than 1 species in the end
sim <- bd.sim(n0, p, q, tMax, nFinal = c(2, Inf))

# we can plot the phylogeny to take a look
if (requireNamespace("ape", quietly = TRUE)) {
  phy <- make.phylo(sim)
  ape::plot.phylo(phy)
}

###
# now let us complicate speciation more, maybe a linear function

# initial number of species
n0 <- 1

# maximum simulation time
tMax <- 40

# speciation rate
p <- function(t) {
  return(0.03 + 0.005*t)
}

# extinction rate
q <- 0.08

# run the simulation, making sure we have more than 1 species in the end
sim <- bd.sim(n0, p, q, tMax, nFinal = c(2, Inf))

# we can plot the phylogeny to take a look
if (requireNamespace("ape", quietly = TRUE)) {
  # full phylogeny
  phy <- make.phylo(sim)
  ape::plot.phylo(phy)
}

# what if we want q to be a step function?

# vector of extinction rates
qList <- c(0.09, 0.08, 0.1)

# vector of shift times. Note qShifts could be c(40, 20, 5) for identical results
qShifts <- c(0, 20, 35)

# let us take a look at how make.rate will make it a step function
q <- make.rate(qList, tMax = tMax, fShifts = qShifts)

# and plot it
plot(seq(0, tMax, 0.1), q(seq(0, tMax, 0.1)), type = 'l',
     main = "Extintion rate as a step function", xlab = "Time (My)",
     ylab = "Rate (species/My)")

# looking good, we will keep everything else the same

# maximum simulation time
tMax <- 40

# initial number of species
n0 <- 1

# speciation
p <- function(t) {
  return(0.02 + 0.005*t)
}

# a different way to define the same extinction function
q <- function(t) {
  ifelse(t < 20, 0.09, 
         ifelse(t < 35, 0.08, 0.1))
}

# run the simulation
sim <- bd.sim(n0, p, q, tMax, nFinal = c(2, Inf))
# we could instead have used q made with make.rate
# that is, however, much slower

# we can plot the phylogeny to take a look
if (requireNamespace("ape", quietly = TRUE)) {
  phy <- make.phylo(sim)
  ape::plot.phylo(phy)
}

###
# we can also supply a shape parameter to try age-dependent rates

# initial number of species
n0 <- 1

# maximum simulation time
tMax <- 40

# speciation - here note it is a Weibull scale
p <- 10

# speciation shape
pShape <- 2

# extinction
q <- 0.08

# run the simulation
sim <- bd.sim(n0, p, q, tMax, pShape = pShape, nFinal = c(2, Inf))

# we can plot the phylogeny to take a look
if (requireNamespace("ape", quietly = TRUE)) {
  phy <- make.phylo(sim)
  ape::plot.phylo(phy)
}

### 
# scale can be a time-varying function as well

# initial number of species
n0 <- 1

# maximum simulation time
tMax <- 40

# speciation - here note it is a Weibull scale
p <- function(t) {
  return(2 + 0.25*t)
}

# speciation shape
pShape <- 2

# extinction
q <- 0.2

# run the simulation
sim <- bd.sim(n0, p, q, tMax, pShape = pShape, nFinal = c(2, Inf))

# we can plot the phylogeny to take a look
if (requireNamespace("ape", quietly = TRUE)) {
  phy <- make.phylo(sim)
  ape::plot.phylo(phy)
}

###
# finally, we can also have a rate dependent on an environmental variable,
# like temperature data in RPANDA

if (requireNamespace("RPANDA", quietly = TRUE)) {
  
  # get temperature data from RPANDA
  data(InfTemp, package = "RPANDA")
  
  # initial number of species
  n0 <- 1
  
  # maximum simulation time
  tMax <- 40
  
  # speciation - a scale
  p <- 10
  
  # note the scale for the age-dependency can be a time-varying function
  
  # speciation shape
  pShape <- 2
  
  # extinction, dependent on temperature exponentially
  q <- function(t, env) {
    return(0.2*exp(0.01*env))
  }
  
  # need a variable to tell bd.sim the extinction is environmentally dependent
  envQQ <- InfTemp
  
  # by passing q and envQQ to bd.sim, internally bd.sim will make q into a 
  # function dependent only on time, using make.rate
  qq <- make.rate(q, envF = envQQ)
  
  # take a look at how the rate itself will be
  plot(seq(0, tMax, 0.1), qq(seq(0, tMax, 0.1)), 
       main = "Extinction rate varying with temperature", xlab = "Time (My)",
       ylab = "Rate", type = )
  
  # run the simulation
  sim <- bd.sim(n0, p, q, tMax, pShape = pShape, envQQ = envQQ,
                nFinal = c(2, Inf))
  
  # we can plot the phylogeny to take a look
  if (requireNamespace("ape", quietly = TRUE)) {
    phy <- make.phylo(sim)
    ape::plot.phylo(phy)
  }
  
  ###
  # one can mix and match all of these scenarios as they wish - age-dependency
  # and constant rates, age-dependent and temperature-dependent rates, etc. The
  # only combination that is not allowed is a vector rate and environmental
  # data, but one can get around that as follows
  
  # initial number of species
  n0 <- 1

  # speciation - a step function of temperature built using ifelse()
  p <- function(t, env) {
    ifelse(t < 20, 2*env,
           ifelse(t < 30, env/2, 2*env/3))
  }

  # speciation shape
  pShape <- 2

  # environment variable to use - temperature
  envPP <- InfTemp
  
  # this is kind of a complicated scale, let us take a look
  
  # make it a function of time
  pp <- make.rate(p, envF = envPP)
  
  # plot it
  plot(seq(0, tMax, 0.1), pp(seq(0, tMax, 0.1)), 
       main = "Speciation scale varying with temperature", xlab = "Time (My)",
       ylab = "Scale", type = 'l')
  
  # extinction - high so this does not take too long to run
  q <- 0.3
  
  # maximum simulation time
  tMax <- 40
  
  # run the simulation
  sim <- bd.sim(n0, p, q, tMax, pShape = pShape, envPP = envPP,
               nFinal = c(2, Inf))
  
  # we can plot the phylogeny to take a look
  if (requireNamespace("ape", quietly = TRUE)) {
    phy <- make.phylo(sim)
    ape::plot.phylo(phy)
  }
}

# note nFinal has to be sensible
\dontrun{
# this would return a warning, since it is virtually impossible to get 100
# species at a process with diversification rate -0.09 starting at n0 = 1
sim <- bd.sim(1, pp = 0.01, qq = 1, tMax = 100, nFinal = c(100, Inf))
}

}
\author{
Bruno do Rosario Petrucci.
}
