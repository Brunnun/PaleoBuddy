% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bd.sim.R
\name{bd.sim}
\alias{bd.sim}
\title{General rate Birth-Death simulation}
\usage{
bd.sim(
  n0,
  pp,
  qq,
  tMax,
  pShape = NULL,
  qShape = NULL,
  envPP = NULL,
  envQQ = NULL,
  pShifts = NULL,
  qShifts = NULL,
  nFinal = c(0, Inf),
  extOnly = FALSE,
  trueExt = FALSE
)
}
\arguments{
\item{n0}{Initial number of species. Usually 1, in which case the simulation 
will describe the full diversification of a monophyletic lineage. Notice that 
when \code{pp} is less than or equal to \code{qq},  many simulations will go 
extinct before speciating even once. One way of generating simulations in this 
case is to increase \code{n0}. The user should notice this will simulate the 
diversification of a paraphyletic group.}

\item{pp}{Speciation rate (per species per million years) over time. It can be 
a \code{numeric} describing a constant rate, a \code{function(t)} describing 
the variation in speciation over time \code{t}, a \code{function(t, env)} 
describing the variation in speciation over time following both time AND 
an environmental variable (please see \code{envPP} for details) or a 
\code{vector} containing rates that correspond to each rate between speciation
rate shift times times (please see \code{pShifts}). Note that \code{pp} should
should always be greater than or equal to zero.}

\item{qq}{Similar to \code{pp}, but for the extinction rate.

Note: rates should be considered as running from \code{0} to \code{tMax}, as
the simulation runs in that direction even though the function inverts times
before returning in the end.}

\item{tMax}{Ending time of simulation, in million years after the clade origin. 
Any species still living after \code{tMax} is considered extant, and any 
species that would be generated after \code{tMax} is not born.}

\item{pShape}{Shape of the age-dependency in speciation rate. This will be 
equal to the shape parameter in a Weibull distribution: when smaller than one, 
speciation rate will decrease along each species' age (negative 
age-dependency). When larger than one, speciation rate will increase along each
species's age (positive age-dependency). Default is \code{NULL}, equivalent to 
an age-independent process. For \code{pShape != NULL} (including when equal to 
one), \code{pp} will be considered a scale (= 1/rate), and \code{rexp.var} will
draw a Weibull distribution instead of an exponential. This means 
Weibull(rate, 1) = Exponential(1/rate). Note that even when 
\code{pShape != NULL}, \code{pp} may still be time-dependent.}

\item{qShape}{Similar to \code{pShape}, but for the extinction rate.

Note: Time-varying shape is implemented, so one could have \code{pShape} or 
\code{qShape} be a function of time. It is not thoroughly tested, however, 
so it may be prudent to wait for a future release where this feature is well
established.}

\item{envPP}{A \code{data.frame} representing the variation of an environmental
variable (e.g. CO2, temperature, available niches, etc) with time. The first 
column of this \code{data.frame} must be time, and the second column must be 
the values of the variable. This will be internally passed to the 
\code{make.rate} function, to create a speciation rate variation in time 
following the interaction between the environmental variable and the function.
Note \code{paleobuddy} has two environmental data frames, \code{temp} and
\code{co2}. One can check \code{RPANDA} for more examples.}

\item{envQQ}{Similar to \code{envPP}, but for the extinction rate.}

\item{pShifts}{Vector of rate shifts. First element must be the starting
time for the simulation (\code{0} or \code{tMax}). It must have the same length
as \code{pp}. \code{c(0, x, tMax)} is equivalent to \code{c(tMax, tMax - x, 0)}
for the purposes of \code{make.rate}.}

\item{qShifts}{Similar to \code{qShifts}, but for the extinction rate.

Note that using this  method for step-function rates is currently slower than 
using \code{ifelse}.}

\item{nFinal}{A \code{vector} of length \code{2}, indicating an interval of 
acceptable number of species at the end of the simulation. Default value is 
\code{c(0, Inf)}, so that any number of species (including zero, the extinction
of the whole clade) is accepted. If different from default value, the process
will run until the number of total species reaches a number in the interval
\code{nFinal}. Please note that \code{extOnly} can modify the meaning of this 
parameter. If \code{extOnly = TRUE}, the function will run repeatedly until the
number of \emph{extant} species at the end of the simulation lies within the 
\code{nFinal} interval. Note that using values other than the default for 
\code{nFinal} might condition simulation results.}

\item{extOnly}{A \code{logical} indicating whether \code{nFinal} should be 
taken as an interval of the number of total or extant species during the 
simulation. If \code{TRUE}, the function will run repeatedly until the number 
of \emph{extant} species at the end of the simulation lies within the 
\code{nFinal} interval. If \code{FALSE} (as default), it will run until the 
\emph{total} number of species generated lies within that interval.


Note: The function returns \code{NA} if it runs for more than \code{100000}
iterations without fulfilling the requirements of \code{nFinal} and 
\code{extOnly}.}

\item{trueExt}{A \code{logical} used for \code{bd.sim.general}, indicating 
whether it should return true or truncated extinction times. When \code{TRUE}, 
time of extinction of extant species will be the true time, otherwise it will
be \code{NA} if a species is alive at the end of the simulation.}
}
\value{
The return list of either \code{bd.sim.constant} or
\code{bd.sim.general}, which have the same elements, as follows

\describe{
\item{\code{TE}}{List of extinction times, with \code{0} as the time of
extinction for extant species.}

\item{\code{TS}}{List of speciation times, with \code{NA} as the time of
speciation for species that started the simulation.}

\item{\code{PAR}}{List of parents. Species that started the simulation have
\code{NA}, while species that were generated during the simulation have their
parent's number. Species are numbered as they are born.}

\item{\code{EXTANT}}{List of booleans representing whether each species is
extant.}}
}
\description{
Simulates a species birth-death process with general rates for any number of
starting species. Allows for the speciation/extinction rate to be (1) a 
constant, (2) a function of time, (3) a function of time and an environmental
variable, or (4) a vector of numbers. Allows for constraining results on the 
number of species at the end of the simulation, either total or extant. The 
function can also take an optional shape argument to generate age-dependence on
speciation and/or extinction, assuming a Weibull distribution as a model of 
age-dependence. Returns an object containing vectors of speciation times, 
extinction times, parents (= species' mother species) and status at the end of 
the simulation (extant or not) for each species in the simulation. 
It may return true extinction times or simply information on whether species 
lived after the maximum simulation time. 
Please note while time runs from \code{0} to \code{tMax} in the simulation, it 
returns speciation/extinction times as \code{tMax} (origin of the group) to 
\code{0} (the "present" and end of simulation), so as to conform to other
packages in the literature.
}
\examples{

# we will showcase here some of the possible scenarios for diversification,
# touching on all the kinds of rates

###
# consider first the simplest regimen, constant speciation and extinction

# initial number of species
n0 <- 1

# maximum simulation time
tMax <- 40

# speciation
p <- 0.11

# extinction
q <- 0.08

# run the simulation, making sure we have more than 1 species in the end
sim <- bd.sim(n0, p, q, tMax, nFinal = c(2, Inf))

# we can plot the phylogeny to take a look
if (requireNamespace("ape", quietly = TRUE)) {
  phy <- make.phylo(sim)
  ape::plot.phylo(phy)
}

###
# now let us complicate speciation more, maybe a linear function

# initial number of species
n0 <- 1

# maximum simulation time
tMax <- 40

# speciation rate
p <- function(t) {
  return(0.03 + 0.005*t)
}

# extinction rate
q <- 0.08

# run the simulation, making sure we have more than 1 species in the end
sim <- bd.sim(n0, p, q, tMax, nFinal = c(2, Inf))

# we can plot the phylogeny to take a look
if (requireNamespace("ape", quietly = TRUE)) {
  # full phylogeny
  phy <- make.phylo(sim)
  ape::plot.phylo(phy)
}

# what if we want q to be a step function?

# vector of extinction rates
qList <- c(0.09, 0.08, 0.1)

# vector of shift times. Note qShifts could be c(40, 20, 5) for identical results
qShifts <- c(0, 20, 35)

# let us take a look at how make.rate will make it a step function
q <- make.rate(qList, tMax = tMax, fShifts = qShifts)

# and plot it
plot(seq(0, tMax, 0.1), q(seq(0, tMax, 0.1)), type = 'l',
     main = "Extintion rate as a step function", xlab = "Time (My)",
     ylab = "Rate (species/My)")

# looking good, we will keep everything else the same

# maximum simulation time
tMax <- 40

# initial number of species
n0 <- 1

# speciation
p <- function(t) {
  return(0.02 + 0.005*t)
}

# a different way to define the same extinction function
q <- function(t) {
  ifelse(t < 20, 0.09, 
         ifelse(t < 35, 0.08, 0.1))
}

# run the simulation
sim <- bd.sim(n0, p, q, tMax, nFinal = c(2, Inf))
# we could instead have used qList and qShifts
# that is, however, much slower

# we can plot the phylogeny to take a look
if (requireNamespace("ape", quietly = TRUE)) {
  phy <- make.phylo(sim)
  ape::plot.phylo(phy)
}

###
# we can also supply a shape parameter to try age-dependent rates

# initial number of species
n0 <- 1

# maximum simulation time
tMax <- 40

# speciation - here note it is a Weibull scale
p <- 10

# speciation shape
pShape <- 2

# extinction
q <- 0.08

# run the simulation
sim <- bd.sim(n0, p, q, tMax, pShape = pShape, nFinal = c(2, Inf))

# we can plot the phylogeny to take a look
if (requireNamespace("ape", quietly = TRUE)) {
  phy <- make.phylo(sim)
  ape::plot.phylo(phy)
}

### 
# scale can be a time-varying function as well

# initial number of species
n0 <- 1

# maximum simulation time
tMax <- 40

# speciation - here note it is a Weibull scale
p <- function(t) {
  return(2 + 0.25*t)
}

# speciation shape
pShape <- 2

# extinction
q <- 0.2

# run the simulation
sim <- bd.sim(n0, p, q, tMax, pShape = pShape, nFinal = c(2, Inf))

# we can plot the phylogeny to take a look
if (requireNamespace("ape", quietly = TRUE)) {
  phy <- make.phylo(sim)
  ape::plot.phylo(phy)
}

###
# finally, we can also have a rate dependent on an environmental variable,
# like temperature data

# get temperature data 
data(temp)

# initial number of species
n0 <- 1

# maximum simulation time
tMax <- 40

# speciation - a scale
p <- 10

# note the scale for the age-dependency can be a time-varying function

# speciation shape
pShape <- 2

# extinction, dependent on temperature exponentially
q <- function(t, env) {
  return(0.1*exp(0.01*env))
}

# need a variable to tell bd.sim the extinction is environmentally dependent
envQQ <- temp

# by passing q and envQQ to bd.sim, internally bd.sim will make q into a
# function dependent only on time, using make.rate
qq <- make.rate(q, envF = envQQ)

# take a look at how the rate itself will be
plot(seq(0, tMax, 0.1), qq(seq(0, tMax, 0.1)),
     main = "Extinction rate varying with temperature", xlab = "Time (My)",
     ylab = "Rate", type = 'l')

# run the simulation
sim <- bd.sim(n0, p, q, tMax, pShape = pShape, envQQ = envQQ,
              nFinal = c(2, Inf))

# we can plot the phylogeny to take a look
if (requireNamespace("ape", quietly = TRUE)) {
  phy <- make.phylo(sim)
  ape::plot.phylo(phy)
}

###
# one can mix and match all of these scenarios as they wish - age-dependency
# and constant rates, age-dependent and temperature-dependent rates, etc. The
# only combination that is not allowed is a vector rate and environmental
# data, but one can get around that as follows

# initial number of species
n0 <- 1

# speciation - a step function of temperature built using ifelse()
p <- function(t, env) {
  ifelse(t < 20, env,
         ifelse(t < 30, env / 4, env / 3))
}

# speciation shape
pShape <- 2

# environment variable to use - temperature
envPP <- temp

# this is kind of a complicated scale, let us take a look

# make it a function of time
pp <- make.rate(p, envF = envPP)

# plot it
plot(seq(0, tMax, 0.1), pp(seq(0, tMax, 0.1)),
     main = "Speciation scale varying with temperature", xlab = "Time (My)",
     ylab = "Scale", type = 'l')

# extinction - high so this does not take too long to run
q <- 0.2

# maximum simulation time
tMax <- 40

# run the simulation
sim <- bd.sim(n0, p, q, tMax, pShape = pShape, envPP = envPP,
              nFinal = c(2, Inf))

# we can plot the phylogeny to take a look
if (requireNamespace("ape", quietly = TRUE)) {
  phy <- make.phylo(sim)
  ape::plot.phylo(phy)
}

# note nFinal has to be sensible
\dontrun{
# this would return a warning, since it is virtually impossible to get 100
# species at a process with diversification rate -0.09 starting at n0 = 1
sim <- bd.sim(1, pp = 0.01, qq = 1, tMax = 100, nFinal = c(100, Inf))
}

}
\author{
Bruno do Rosario Petrucci.
}
