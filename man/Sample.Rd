% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Sample.R
\name{Sample}
\alias{Sample}
\title{Species sampling}
\usage{
Sample(S, TE, TS, rr, tMax)
}
\arguments{
\item{S}{the species number to be sampled. Since \code{Sample} will be
called by a wrapper using \code{lapply}, it is through \code{S}
that we apply this function.}

\item{TE}{a vector of extinction times, usually an output of \code{BDSim}.}

\item{TS}{a vector of speciation times, usually an output of \code{BDSim}.}

\item{rr}{a sampling rate function. Can be created by \code{MakeRate} for
simplicity, but can be any time-varying function.}

\item{tMax}{the maximum simulation time, used by \code{rexp_var}.}
}
\value{
a list of occurrences for that species.
}
\description{
\code{Sample} takes a species number, a vector of speciation and extinction times,
 a sampling rate with possible shape and a maximum time for simulation.
}
\examples{

# Note: all examples use just 1 lineage and very large preservation rates just
# to be clearer to the reader. Most of times preservation will never be this high

# let us start with a linear increase in preservation rate

sim<-BDSim(n0 = 1, pp = .1, qq = 0.1, tMax = 10)
while((sim$TS[1]-sim$TE[1])<10) { # in case first simulation has short-lived
                                 # lineage which will obscure the pattern
  sim<-BDSim(n0 = 1, pp = .1, qq = 0.1, tMax = 10)
}

# preservation function
r<-function(t) {
  return(50+t*30)
}

t<-seq(0, 10, by=.1)
# visualizing from the past to the present
plot(x=t, y=rev(r(t)), main="Simulated preservation", type="l", col="red",
xlab="Mya", ylab="preservation rate", xlim=c(10, sim$TE[1]))

occs<-Sample(S = 1, TS = sim$TS[1], TE = sim$TE[1], rr = r, tMax = 10)
hist(occs,
     xlim=c(10, sim$TE[1]), #changing axis
     xlab="Mya") #informative labels
lines(t, rev(r(t)))

# now let us try a step function

sim<-BDSim(n0 = 1, pp = .1, qq = 0.1, tMax = 10)
while((sim$TS[1]-sim$TE[1])<10) { # in case first simulation has short-lived
                                 # lineage which will obscure the pattern
  sim<-BDSim(n0 = 1, pp = .1, qq = 0.1, tMax = 10)
}

# we can create the sampling rate here from a few vectors
rlist <- c(50, 20, 80)
rshifts <- c(0, 4, 8) # this could be c(10, 6, 2) and would produce the same function

r <- MakeRate(rlist, tMax=10, fShifts=rshifts)

t<-seq(0, 10, by=.1)
plot(x=t, y=rev(r(t)), main="Simulated preservation", type="l", col="red",
xlab="Mya", ylab="preservation rate", xlim=c(10, sim$TE[1]))

occs<-Sample(S = 1, TS = sim$TS[1], TE = sim$TE[1], rr = r, tMax = 10)
hist(occs,
     xlim=c(10, sim$TE[1]), #changing axis
     xlab="Mya") #informative labels
abline(v=c(6,2), col="red") # frontiers of each regime

# we can create a step function in a different way as well
sim<-BDSim(n0 = 1, pp = .1, qq = 0.1, tMax = 10)
while((sim$TS[1]-sim$TE[1])<10) { # in case first simulation has short-lived lineage
                                 # which will obscure the pattern
  sim<-BDSim(n0 = 1, pp = .1, qq = 0.1, tMax = 10)
}

# preservation function
r<-function(t) {
  ifelse(t < 4, 50,# preservation rates at first regime (4 - 0 Mya)
         ifelse(t < 8, 20, # preservation rates at second regime (8 - 5 Mya)
                80)) # preservation rates at third regime (after 8 Mya)
}

t<-seq(0, 10, by=.1)
plot(x=t, y=rev(r(t)), main="Simulated preservation", type="l", col="red",
xlab="Mya", ylab="preservation rate", xlim=c(10, sim$TE[1]))

occs<-Sample(S = 1, TS = sim$TS[1], TE = sim$TE[1], rr = r, tMax = 10)
hist(occs,
     xlim=c(10, sim$TE[1]), # changing axis
     xlab="Mya") # informative labels
abline(v=c(6, 2), col="red") # frontiers of each regime

# one could also use an environmental function to generate a sampling rate,
# see MakeRate()

}
\author{
written by Bruno do Rosario Petrucci and Matheus Januario.
}
